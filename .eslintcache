[{"C:\\Dev\\udemy\\jotto\\src\\utils\\api.ts":"1","C:\\Dev\\udemy\\jotto\\src\\index.tsx":"2","C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.reducer.ts":"3","C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.sagas.ts":"4","C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.reducer.ts":"5","C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.sagas.ts":"6","C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.types.ts":"7","C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.types.ts":"8","C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.actions.ts":"9","C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.types.ts":"10","C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.actions.ts":"11","C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.actions.ts":"12","C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.select.ts":"13","C:\\Dev\\udemy\\jotto\\src\\helpers\\index.tsx":"14","C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.reducer.ts":"15","C:\\Dev\\udemy\\jotto\\src\\App.tsx":"16","C:\\Dev\\udemy\\jotto\\src\\components\\test.component.tsx":"17","C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.selectors.ts":"18","C:\\Dev\\udemy\\jotto\\src\\components\\Congrats.tsx":"19"},{"size":451,"mtime":1607351129360,"results":"20","hashOfConfig":"21"},{"size":622,"mtime":1606231408327,"results":"22","hashOfConfig":"21"},{"size":351,"mtime":1607351795991,"results":"23","hashOfConfig":"21"},{"size":1070,"mtime":1607351648682,"results":"24","hashOfConfig":"21"},{"size":403,"mtime":1606422801701,"results":"25","hashOfConfig":"21"},{"size":2088,"mtime":1607007633891,"results":"26","hashOfConfig":"21"},{"size":230,"mtime":1606248926015,"results":"27","hashOfConfig":"21"},{"size":415,"mtime":1606809626922,"results":"28","hashOfConfig":"21"},{"size":396,"mtime":1606809650173,"results":"29","hashOfConfig":"21"},{"size":502,"mtime":1606457902631,"results":"30","hashOfConfig":"21"},{"size":195,"mtime":1606248967017,"results":"31","hashOfConfig":"21"},{"size":481,"mtime":1606457597725,"results":"32","hashOfConfig":"21"},{"size":371,"mtime":1606459120975,"results":"33","hashOfConfig":"21"},{"size":288,"mtime":1606162257011,"results":"34","hashOfConfig":"21"},{"size":313,"mtime":1606249078482,"results":"35","hashOfConfig":"21"},{"size":1410,"mtime":1607521948703,"results":"36","hashOfConfig":"21"},{"size":1401,"mtime":1606919529110,"results":"37","hashOfConfig":"21"},{"size":359,"mtime":1606249627936,"results":"38","hashOfConfig":"21"},{"size":554,"mtime":1606222013305,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"k7vq4b",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\udemy\\jotto\\src\\utils\\api.ts",[],["81","82"],"C:\\Dev\\udemy\\jotto\\src\\index.tsx",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.reducer.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.sagas.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.reducer.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.sagas.ts",["83"],"import {\r\n  PutEffect,\r\n  CallEffect,\r\n  ForkEffect,\r\n  SimpleEffect,\r\n  SelectEffectDescriptor\r\n} from 'redux-saga/effects';\r\nimport { put, select, call, takeLatest } from 'typed-redux-saga';\r\nimport {\r\n  guessWord\r\n} from './guessed-words.actions';\r\n\r\nimport { correctGuess } from '../success/success.actions';\r\n\r\nimport { selectSecretWord } from './../secret-word/secret-word.select';\r\n\r\nimport { getLetterMatchCount } from '../../helpers';\r\n\r\nimport {\r\n  GuessedWordsActionTypes,\r\n  evaluateWordAction\r\n  // GuessedWordsAction,\r\n} from './guessed-words.types';\r\n\r\n// import { api } from '../../utils/api';\r\n\r\nexport function* evaluateWord(action: evaluateWordAction): Generator<\r\n  CallEffect | PutEffect  | SimpleEffect<\"SELECT\", SelectEffectDescriptor> | void,\r\n  void,\r\n  unknown\r\n> {\r\n  try {\r\n    console.log('guessWord() - saga started');\r\n    // console.log('payload is: ' + action.payload);\r\n    const guessedWord = action.payload\r\n    const secretWord = yield* select(selectSecretWord);\r\n    const letterMatchCount = getLetterMatchCount(guessedWord, secretWord);\r\n    console.log('guessWord() - action guessWord called with params; ' + guessedWord + '/' + letterMatchCount);\r\n    // const response:any = yield* call(api.get, '/api/word');\r\n    // console.log('guessWord() - axios query returned: ');\r\n    // console.log(response);\r\n    // Atomics.wait(new Int32Array(new SharedArrayBuffer(4)), 0, 0, 500);\r\n    // let date = new Date();\r\n    // let curDate:Date;\r\n    // do { curDate = new Date(); }\r\n    // while(Number(curDate)-Number(date) < 500);\r\n    yield* put(guessWord({ guessedWord, letterMatchCount }));\r\n    if(guessedWord === secretWord) {\r\n      console.log('guessWord() - action corretGuess called');\r\n      yield* put(correctGuess());\r\n    }\r\n \r\n    \r\n  } catch (err) {\r\n    console.log('guessWord() - error occured');\r\n  }\r\n  yield console.log('guessWord() - saga finsshed');\r\n}\r\n\r\nexport function* evaluateWordStart(): Generator<\r\n  ForkEffect<never>,\r\n  void,\r\n  unknown\r\n> {\r\n  yield* takeLatest(GuessedWordsActionTypes.EVALUATE_WORD, evaluateWord);\r\n}\r\n\r\n","C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.types.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.types.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.actions.ts",[],["84","85"],"C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.types.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.actions.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\guessed-words\\guessed-words.actions.ts",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\secret-word\\secret-word.select.ts",[],"C:\\Dev\\udemy\\jotto\\src\\helpers\\index.tsx",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.reducer.ts",[],"C:\\Dev\\udemy\\jotto\\src\\App.tsx",[],"C:\\Dev\\udemy\\jotto\\src\\components\\test.component.tsx",[],"C:\\Dev\\udemy\\jotto\\src\\redux\\success\\success.selectors.ts",[],"C:\\Dev\\udemy\\jotto\\src\\components\\Congrats.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":8,"column":23,"nodeType":"92","messageId":"93","endLine":8,"endColumn":27},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'call' is defined but never used.","Identifier","unusedVar",["96"],["97"],"no-global-assign","no-unsafe-negation"]